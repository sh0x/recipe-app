diff --git a/.github/pull_request_template.md b/.github/pull_request_template.md
new file mode 100644
index 0000000..f1e1a5b
--- /dev/null
+++ b/.github/pull_request_template.md
@@ -0,0 +1,22 @@
+## What
+<!-- Short summary of the change -->
+
+## Why
+<!-- The problem this solves -->
+
+## How to test
+1. `docker compose up --build` (or open in Dev Container)
+2. Visit http://localhost:3000
+3. (Optional) `/import` → try a sample file
+
+## Notes
+- [ ] Prisma schema/migrations updated if needed
+- [ ] Added/updated docs if needed
+
+## Screenshots
+<!-- If UI changed -->
+
+---
+**Checklist**
+- [ ] CI green
+- [ ] I’ve run `pnpm build` locally (or in Dev Container)
diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml
new file mode 100644
index 0000000..e3d8a02
--- /dev/null
+++ b/.github/workflows/ci.yml
@@ -0,0 +1,54 @@
+name: CI
+
+on:
+  push:
+    branches: [main]
+  pull_request:
+    branches: [main]
+
+jobs:
+  build:
+    runs-on: ubuntu-latest
+    steps:
+      - name: Checkout
+        uses: actions/checkout@v4
+
+      - name: Use Node.js 20 with PNPM cache
+        uses: actions/setup-node@v4
+        with:
+          node-version: '20'
+          cache: 'pnpm'
+
+      - name: Enable Corepack & PNPM
+        run: |
+          corepack enable
+          corepack prepare pnpm@latest --activate
+          pnpm --version
+
+      - name: Install deps
+        run: pnpm install --frozen-lockfile=false
+
+      - name: Prisma generate (no DB needed)
+        run: pnpm exec prisma generate
+
+      - name: Typecheck
+        run: pnpm exec tsc --noEmit
+
+      - name: Build
+        env:
+          NEXT_TELEMETRY_DISABLED: '1'
+          # Prisma doesn't connect on generate/build, but set a dummy to be safe
+          DATABASE_URL: postgresql://user:pass@localhost:5432/db
+        run: pnpm run build
diff --git a/.env.example b/.env.example
new file mode 100644
index 0000000..c0d8a7f
--- /dev/null
+++ b/.env.example
@@ -0,0 +1,5 @@
+# Copy to `.env` for local dev (Docker Compose already sets these)
+DATABASE_URL=postgresql://recipe:recipe@localhost:5432/recipebook
+NEXT_TELEMETRY_DISABLED=1
+# Optional: tweak Next dev port
+# PORT=3000
diff --git a/docs/DEVCONTAINERS.md b/docs/DEVCONTAINERS.md
new file mode 100644
index 0000000..5d0a734
--- /dev/null
+++ b/docs/DEVCONTAINERS.md
@@ -0,0 +1,44 @@
+# VS Code Dev Containers
+
+## First open
+1. Open the repo folder in VS Code
+2. Run **Dev Containers: Rebuild and Reopen in Container**
+3. Wait for postCreate/postStart to finish (it will run `pnpm install`, `prisma generate`, `migrate`, `seed`)
+4. Terminal → `pnpm dev` → http://localhost:3000
+
+## Troubleshooting
+- If PNPM prompts about reinstalling `node_modules`, it’s handled automatically by the devcontainer config.
+- If Prisma warns about ignored build scripts, the devcontainer runs `prisma generate` on start.
+- If ports collide, run `PORT=3001 pnpm dev` and forward 3001 in VS Code’s **Ports** panel.
+
+## Compose parity
+Everything the devcontainer does is mirrored by `docker compose up --build`.
