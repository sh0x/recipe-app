name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Primary: install pnpm via official action
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.15.0
          run_install: false

      # Fallback + diagnostics: if pnpm isn't on PATH, activate via Corepack
      - name: Verify pnpm & fallback via Corepack if missing
        shell: bash
        run: |
          set -euxo pipefail
          if ! command -v pnpm >/dev/null 2>&1; then
            echo "pnpm not found on PATH; activating via Corepackâ€¦"
            corepack enable
            COREPACK_ENABLE_DOWNLOAD_PROMPT=0 corepack prepare pnpm@10.15.0 --activate
          fi
          echo "PATH is: $PATH"
          which pnpm
          pnpm --version

      - name: Use Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'  # enables dependency cache; does NOT install pnpm

      - name: Install deps
        run: pnpm install --frozen-lockfile=false

      - name: Prisma generate (no DB needed)
        run: pnpm exec prisma generate

      - name: Typecheck
        run: pnpm exec tsc --noEmit

      - name: Build
        env:
          NEXT_TELEMETRY_DISABLED: '1'
          # Dummy DB URL so env exists during build; Prisma will not connect here
          DATABASE_URL: postgresql://user:pass@localhost:5432/db
        run: pnpm run build

